<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title><%= content_for?(:title) ? yield(:title) : "Food Decider 1000" %></title>
    <meta name="description" content="<%= content_for?(:description) ? yield(:description) : "Item Info" %>">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>

    <style>
      h1 {text-align: center; border-style: solid; border-color: black; background-color: blue; color: white;}
      container {border-style: solid;}
      h2 {text-align: center; background-color: green; border: 2px solid black; color: white}
      table, th, td {border: 1px solid black; text-align: center; word-wrap: break-word; width: 600px}
      button {data-inline="true";}
    </style>
  </head>

  <body>
    <ul class="nav nav-tabs">
    <li class="nav-item">
      <a class="nav-link Home" aria-current="page" href="#">Home</a>
    </li>
    <li class="nav-item dropdown">
      <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button" aria-expanded="false">Account</a>
      <% if user_signed_in? %>
      Logged in as <strong><%= current_user.email %></strong>.
        <ul class="dropdown-menu">
          <li><%= button_to "Edit Profile", edit_user_registration_path, :id => "open-contacts-dialog-btn",
          :class => "btn btn-primary", :method => :get %></li>
          <p></p>
          <li><%= button_to "Log Out", destroy_user_session_path, :id => "open-contacts-dialog-btn",
          :class => "btn btn-primary", :method => :delete %></li>
        </ul>
      <% else %>
        <ul class="dropdown-menu">
          <li><%= button_to "Sign Up", new_user_registration_path, :id => "open-contacts-dialog-btn",
          :class => "btn btn-primary", :method => :get %></li>
          <p></p>
          <li><%= button_to "Log In", new_user_session_path, :id => "open-contacts-dialog-btn",
          :class => "btn btn-primary", :method => :get %></li>
        </ul>
      <% end %>
    </li>
  </ul>

    <h1>Food Decider 1000</h1>
    <p></p>
    <div class="container" style="border: 3px solid black;">
    <main role="main">
      <%= content_for?(:content) ? yield(:content) : yield %>
    </main>
    <p></p>
    </div>
    <p></p>
    <div class="container" style="border: 3px solid black;">
      <h2>Restaurants</h2>
      <button class="btn btn-primary" onclick=sortTable(0)>Sort By Restaurant</button>
      <button class="btn btn-primary" onclick=sortTable(1)>Sort By Category</button>
      <p></p>

      <table id="restaurant">
        <thead>
            <tr>
                <th>Restaurant</th>
                <th>Category</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <% Restaurant.all.each do |restaurant| %>
                <tr>
                    <td><%= restaurant.title %></td>
                    <td><%= restaurant.category %></td>
                    <td><%= restaurant.description %></td>
                </tr>
            <% end %>
        </tbody>
      </table>
      <p></p>
    </div>
  </body>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("restaurant");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc"; 
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++; 
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
</html>
